Ext.data.JsonP.Siesta_Harness_Browser({"tagname":"class","name":"Siesta.Harness.Browser","autodetected":{},"files":[{"filename":"Browser.js","href":"Browser3.html#Siesta-Harness-Browser"}],"extends":"Siesta.Harness","members":[{"name":"alsoPreload","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-alsoPreload","meta":{}},{"name":"autoCheckGlobals","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-autoCheckGlobals","meta":{}},{"name":"autoRun","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-autoRun","meta":{}},{"name":"autoScrollElementsIntoView","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-autoScrollElementsIntoView","meta":{}},{"name":"breakOnFail","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-breakOnFail","meta":{}},{"name":"cachePreload","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-cachePreload","meta":{}},{"name":"debuggerOnFail","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-debuggerOnFail","meta":{}},{"name":"defaultTimeout","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-defaultTimeout","meta":{}},{"name":"disableCaching","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-disableCaching","meta":{}},{"name":"domContainerRegion","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-domContainerRegion","meta":{}},{"name":"enableUnreachableClickWarning","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-enableUnreachableClickWarning","meta":{}},{"name":"expectedGlobals","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-expectedGlobals","meta":{}},{"name":"failOnExclusiveSpecsWhenAutomated","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-failOnExclusiveSpecsWhenAutomated","meta":{}},{"name":"failOnResourceLoadError","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-failOnResourceLoadError","meta":{}},{"name":"forceDOMVisible","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-forceDOMVisible","meta":{}},{"name":"innerHtmlBody","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-innerHtmlBody","meta":{}},{"name":"innerHtmlHead","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-innerHtmlHead","meta":{}},{"name":"isReadyTimeout","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-isReadyTimeout","meta":{}},{"name":"jasmine","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-jasmine","meta":{}},{"name":"keepNLastResults","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-keepNLastResults","meta":{}},{"name":"listeners","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-listeners","meta":{}},{"name":"maintainViewportSize","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-maintainViewportSize","meta":{}},{"name":"maxThreads","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-maxThreads","meta":{}},{"name":"mouseMovePrecision","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-mouseMovePrecision","meta":{}},{"name":"needDone","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-needDone","meta":{}},{"name":"needUI","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-needUI","meta":{}},{"name":"overrideSetTimeout","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-overrideSetTimeout","meta":{}},{"name":"pageUrl","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-pageUrl","meta":{}},{"name":"pauseBetweenTests","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-pauseBetweenTests","meta":{}},{"name":"preload","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-preload","meta":{}},{"name":"recorderConfig","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-recorderConfig","meta":{}},{"name":"rerunHotKey","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-rerunHotKey","meta":{}},{"name":"restartOnBlur","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-restartOnBlur","meta":{}},{"name":"runCore","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-runCore","meta":{}},{"name":"runInPopup","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-runInPopup","meta":{}},{"name":"sandbox","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-sandbox","meta":{}},{"name":"sandboxBoundaryByGroup","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-sandboxBoundaryByGroup","meta":{}},{"name":"sandboxCleanup","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-sandboxCleanup","meta":{}},{"name":"simulateEventsWith","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-simulateEventsWith","meta":{}},{"name":"speedRun","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-speedRun","meta":{}},{"name":"subTestTimeout","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-subTestTimeout","meta":{}},{"name":"testClass","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-testClass","meta":{}},{"name":"title","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-title","meta":{}},{"name":"transparentEx","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-transparentEx","meta":{}},{"name":"useStrictMode","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-useStrictMode","meta":{}},{"name":"viewDOM","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-viewDOM","meta":{}},{"name":"viewportHeight","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-viewportHeight","meta":{}},{"name":"viewportWidth","tagname":"cfg","owner":"Siesta.Harness.Browser","id":"cfg-viewportWidth","meta":{}},{"name":"waitForTimeout","tagname":"cfg","owner":"Siesta.Harness","id":"cfg-waitForTimeout","meta":{}},{"name":"configure","tagname":"method","owner":"Siesta.Harness","id":"method-configure","meta":{}},{"name":"isStandardPackage","tagname":"method","owner":"Siesta.Harness.Browser","id":"method-isStandardPackage","meta":{}},{"name":"start","tagname":"method","owner":"Siesta.Harness","id":"method-start","meta":{}},{"name":"startFromUrl","tagname":"method","owner":"Siesta.Harness","id":"method-startFromUrl","meta":{}},{"name":"testsuiteend","tagname":"event","owner":"Siesta.Harness","id":"event-testsuiteend","meta":{}},{"name":"testsuitestart","tagname":"event","owner":"Siesta.Harness","id":"event-testsuitestart","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Siesta.Harness.Browser","short_doc":"Class, representing the browser harness. ...","component":false,"superclasses":["Siesta.Harness"],"subclasses":["Siesta.Harness.Browser.ExtJS","Siesta.Harness.Browser.SenchaTouch"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='docClass'>Siesta.Harness</a><div class='subclass '><strong>Siesta.Harness.Browser</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/Siesta.Harness.Browser.ExtJS' rel='Siesta.Harness.Browser.ExtJS' class='docClass'>Siesta.Harness.Browser.ExtJS</a></div><div class='dependency'><a href='#!/api/Siesta.Harness.Browser.SenchaTouch' rel='Siesta.Harness.Browser.SenchaTouch' class='docClass'>Siesta.Harness.Browser.SenchaTouch</a></div><h4>Files</h4><div class='dependency'><a href='source/Browser3.html#Siesta-Harness-Browser' target='_blank'>Browser.js</a></div></pre><div class='doc-contents'><p>Class, representing the browser harness. This class provides a web-based UI and defines some additional configuration options.</p>\n\n<p>The default value of the <code>testClass</code> configuration option in this class is <a href=\"#!/api/Siesta.Test.Browser\" rel=\"Siesta.Test.Browser\" class=\"docClass\">Siesta.Test.Browser</a>, which contains\nonly generic browser-related assertions. So, use this harness class, when testing a generic web page.</p>\n\n<p>This file is for reference only, for a getting start guide and manual, please refer to <a href=\"#!/guide/siesta_getting_started\">Getting Started Guide</a>.</p>\n\n<h1>Synopsys</h1>\n\n<pre><code>var harness = new <a href=\"#!/api/Siesta.Harness.Browser\" rel=\"Siesta.Harness.Browser\" class=\"docClass\">Siesta.Harness.Browser</a>();\n\nharness.configure({\n    title     : 'Awesome Test Suite',\n\n    transparentEx       : true,\n\n    autoCheckGlobals    : true,\n    expectedGlobals     : [\n        'Ext',\n        'Sch'\n    ],\n\n    preload : [\n        \"http://cdn.sencha.io/ext-4.0.2a/ext-all-debug.js\",\n        \"../awesome-project-all.js\",\n        {\n            text    : \"console.log('preload completed')\"\n        }\n    ]\n})\n\n\nharness.start(\n    // simple string - url relative to harness file\n    'sanity.t.js',\n\n    // test file descriptor with own configuration options\n    {\n        url     : 'basic.t.js',\n\n        // replace `preload` option of harness\n        preload : [\n            \"http://cdn.sencha.io/ext-4.0.6/ext-all-debug.js\",\n            \"../awesome-project-all.js\"\n        ]\n    },\n\n    // groups (\"folders\") of test files (possibly with own options)\n    {\n        group       : 'Sanity',\n\n        autoCheckGlobals    : false,\n\n        items       : [\n            'data/crud.t.js',\n            ...\n        ]\n    },\n    ...\n)\n</code></pre>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-alsoPreload' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-alsoPreload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-alsoPreload' class='name expandable'>alsoPreload</a> : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>The array with preload descriptors describing which files/code should be preloaded additionally. ...</div><div class='long'><p>The array with preload descriptors describing which files/code should be preloaded <strong>additionally</strong>.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n</div></div></div><div id='cfg-autoCheckGlobals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-autoCheckGlobals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-autoCheckGlobals' class='name expandable'>autoCheckGlobals</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, harness will automatically issue an Siesta.Test.verifyGlobals assertion at the end of each test,\nso...</div><div class='long'><p>When set to <code>true</code>, harness will automatically issue an <a href=\"#!/api/Siesta.Test-method-verifyGlobals\" rel=\"Siesta.Test-method-verifyGlobals\" class=\"docClass\">Siesta.Test.verifyGlobals</a> assertion at the end of each test,\nso you won't have to manually specify it each time. The assertion will be triggered only if test completed successfully. Default value is <code>false</code>.\nSee also <a href=\"#!/api/Siesta.Harness-cfg-expectedGlobals\" rel=\"Siesta.Harness-cfg-expectedGlobals\" class=\"docClass\">expectedGlobals</a> configuration option and <a href=\"#!/api/Siesta.Test-method-expectGlobals\" rel=\"Siesta.Test-method-expectGlobals\" class=\"docClass\">Siesta.Test.expectGlobals</a> method.</p>\n\n<p>This option will be always disabled in Opera, since every DOM element with <code>id</code> is being added as a global symbol in it.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-autoRun' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-autoRun' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-autoRun' class='name expandable'>autoRun</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, harness will automatically launch the execution either of the checked test files or the whole suite. ...</div><div class='long'><p>When set to <code>true</code>, harness will automatically launch the execution either of the checked test files or the whole suite.\nDefault value is <code>false</code></p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-autoScrollElementsIntoView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-autoScrollElementsIntoView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-autoScrollElementsIntoView' class='name expandable'>autoScrollElementsIntoView</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>With this option enabled Siesta will try to scroll invisible action targets into the view automatically, before perfo...</div><div class='long'><p>With this option enabled Siesta will try to scroll invisible action targets into the view automatically, before performing an\naction (such as click etc).</p>\n\n<p>This option can also be specified in the test file descriptor.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-breakOnFail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-breakOnFail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-breakOnFail' class='name expandable'>breakOnFail</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, the harness will not start launching any further tests after detecting a failed assertion. ...</div><div class='long'><p>When set to <code>true</code>, the harness will not start launching any further tests after detecting a failed assertion.\nDefault value is <code>false</code>.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-cachePreload' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-cachePreload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-cachePreload' class='name expandable'>cachePreload</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, harness will cache the content of the preload files and provide it for each test, instead of loadin...</div><div class='long'><p>When set to <code>true</code>, harness will cache the content of the preload files and provide it for each test, instead of loading it\nfrom network each time. This option may give a slight speedup in tests execution (especially when running the suite from the remote server), but see the\ncaveats below. Default value is <code>false</code>.</p>\n\n<p>Caveats: this option doesn't work very well for CSS (due to broken relative urls for images). Also its not \"debugging-friendly\" - as you will not be able\nto setup breakpoints for cached code.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-debuggerOnFail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-debuggerOnFail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-debuggerOnFail' class='name expandable'>debuggerOnFail</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, the harness will issue a debugger statement after detecting a failed assertion, allowing you\nto ins...</div><div class='long'><p>When set to <code>true</code>, the harness will issue a <code>debugger</code> statement after detecting a failed assertion, allowing you\nto inspect the internal state of the test in the browser's debugger. Default value is <code>false</code>.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-defaultTimeout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-defaultTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-defaultTimeout' class='name expandable'>defaultTimeout</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Default timeout for beginAsync operation (in milliseconds). ...</div><div class='long'><p>Default timeout for <code>beginAsync</code> operation (in milliseconds). Default value is 15000.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>15000</code></p></div></div></div><div id='cfg-disableCaching' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-disableCaching' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-disableCaching' class='name expandable'>disableCaching</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, harness will prevent the browser caching of files being preloaded and the test files, by appending\n...</div><div class='long'><p>When set to <code>true</code>, harness will prevent the browser caching of files being preloaded and the test files, by appending\na query string to it.\nNote, that in this case, debuggers may not understand that you are actually loading the same file, and breakpoints may not work. Default value is <code>false</code></p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-domContainerRegion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-domContainerRegion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-domContainerRegion' class='name expandable'>domContainerRegion</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Should be exactly one of east/west/south/north. ...</div><div class='long'><p>Should be exactly one of <code>east/west/south/north</code>. Controls the position of the dom container\npanel. Set it to <code>south</code> to create a \"portrait\" mode of the results panel with the assertions grid at the top and DOM container\nat the bottom.</p>\n<p>Defaults to: <code>'east'</code></p></div></div></div><div id='cfg-enableUnreachableClickWarning' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-enableUnreachableClickWarning' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-enableUnreachableClickWarning' class='name expandable'>enableUnreachableClickWarning</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When this option is set to true (default) Siesta will generate warnings\nwhen click happens in the unreachable point o...</div><div class='long'><p>When this option is set to <code>true</code> (default) Siesta will generate warnings\nwhen click happens in the unreachable point of some element. For example, imagine the following situation: you have\na 10x10px \"div\" element with \"overflow : hidden\", and inside of it, another inner \"div\" 10x50px. Then you ask Siesta\nto click on the inner div (by default it clicks in the center). The center of inner div is hidden by the outer div,\nso click will happen on some other element and a warning will be issued.</p>\n\n<p>Usually this behaviour is what you want, since it protects you from various mistakes, but sometimes you may want\nto disable it, for example if you want to write your clicks like this: <code>{ click : someEl, offset : [ \"50%\", \"100%+10\" ] }</code>\n(which means - click 10px to the right from right edge of the <code>someEl</code>).</p>\n\n<p>Note, that warning won't be issued if in the click point there's some child element of the target element.</p>\n\n<p>This option can also be specified in the test file descriptor.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-expectedGlobals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-expectedGlobals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-expectedGlobals' class='name expandable'>expectedGlobals</a> : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>An array of properties names which are likely to present in the scope of each test. ...</div><div class='long'><p>An array of properties names which are likely to present in the scope of each test. There is no need to provide the name\nof built-in globals - harness will automatically scan them from the empty context. Only provide the names of global properties which will be created\nby your preload code.</p>\n\n<p>For example</p>\n\n<pre><code>harness.configure({\n    title               : 'Ext Scheduler Test Suite',\n\n    autoCheckGlobals    : true,\n    expectedGlobals     : [\n        'Ext',\n        'MyProject',\n        'SomeExternalLibrary'\n    ],\n    ...\n})\n</code></pre>\n\n<p>This option can be also specified in the test file descriptor.</p>\n</div></div></div><div id='cfg-failOnExclusiveSpecsWhenAutomated' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-failOnExclusiveSpecsWhenAutomated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-failOnExclusiveSpecsWhenAutomated' class='name expandable'>failOnExclusiveSpecsWhenAutomated</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When this option is enabled and Siesta is running in automation mode\n(using WebDriver or PhantomJS launcher) any excl...</div><div class='long'><p>When this option is enabled and Siesta is running in automation mode\n(using WebDriver or PhantomJS launcher) any exclusive BDD specs found (like <a href=\"#!/api/Siesta.Test-method-iit\" rel=\"Siesta.Test-method-iit\" class=\"docClass\">t.iit</a> or <a href=\"#!/api/Siesta.Test-method-ddescribe\" rel=\"Siesta.Test-method-ddescribe\" class=\"docClass\">t.ddescribe</a>\nwill cause a failing assertion. The idea behind this setting is that such \"exclusive\" specs should only be used during debugging\nand are often mistakenly committed in the codebase, leaving other specs not executed.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-failOnResourceLoadError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-failOnResourceLoadError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-failOnResourceLoadError' class='name expandable'>failOnResourceLoadError</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, test will try to detect the failures for loading of\nvarious resources (script/link/img tags) and re...</div><div class='long'><p>When set to <code>true</code>, test will try to detect the failures for loading of\nvarious resources (<code>script/link/img</code> tags) and report those as failed assertions. Only supported in modern browsers.\nDefault value is <code>false</code>.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-forceDOMVisible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-forceDOMVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-forceDOMVisible' class='name expandable'>forceDOMVisible</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true the tests will be executed in \"fullscreen\" mode, with their iframes on top of all other elements. ...</div><div class='long'><p>When set to <code>true</code> the tests will be executed in \"fullscreen\" mode, with their iframes on top of all other elements.\nThis is required in IE if your test includes interaction with the DOM, because the <code>document.getElementFromPoint()</code> method\ndoes not work correctly in IE unless the element is visible.</p>\n\n<p>This option is enabled by default in IE and disabled in all other browsers.\nThis option can be also specified in the test file descriptor (usually you will create a group of \"rendering\" tests). Usually it's only relevant for IE,\nso using this option should look like:</p>\n\n<pre><code>harness.start(\n    {\n        group       : 'Rendering',\n\n        forceDOMVisible    : $.browser.msie,\n\n        items       : [\n            'rendering/01_grid.t.js',\n            ...\n        ]\n    },\n    ...\n)\n</code></pre>\n</div></div></div><div id='cfg-innerHtmlBody' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-innerHtmlBody' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-innerHtmlBody' class='name expandable'>innerHtmlBody</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A string that will be placed into the innerHTML property of the &lt;body&gt; tag, before starting the preload process. ...</div><div class='long'><p>A string that will be placed into the <code>innerHTML</code> property of the &lt;body&gt; tag, before starting the preload process.\nNo validity checks will be performed.</p>\n\n<p>This option will not be inherited by the tests with <a href=\"#!/api/Siesta.Harness.Browser-cfg-pageUrl\" rel=\"Siesta.Harness.Browser-cfg-pageUrl\" class=\"docClass\">pageUrl</a> option set, unless it is explicitly set to the\n<code>inherit</code> value.</p>\n\n<p>This option can be specified in the test file descriptor.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Harness.Browser-cfg-innerHtmlHead\" rel=\"Siesta.Harness.Browser-cfg-innerHtmlHead\" class=\"docClass\">innerHtmlHead</a></p>\n</div></div></div><div id='cfg-innerHtmlHead' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-innerHtmlHead' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-innerHtmlHead' class='name expandable'>innerHtmlHead</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A string that will be placed into the innerHTML property of the &lt;head&gt; tag, before starting the preload process. ...</div><div class='long'><p>A string that will be placed into the <code>innerHTML</code> property of the &lt;head&gt; tag, before starting the preload process.\nNo validity checks will be performed.</p>\n\n<p>This option will not be inherited by the tests with <a href=\"#!/api/Siesta.Harness.Browser-cfg-pageUrl\" rel=\"Siesta.Harness.Browser-cfg-pageUrl\" class=\"docClass\">pageUrl</a> option set, unless it is explicitly set to the\n<code>inherit</code> value.</p>\n\n<p>This option can be specified in the test file descriptor.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Harness.Browser-cfg-innerHtmlBody\" rel=\"Siesta.Harness.Browser-cfg-innerHtmlBody\" class=\"docClass\">innerHtmlBody</a></p>\n</div></div></div><div id='cfg-isReadyTimeout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-isReadyTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-isReadyTimeout' class='name expandable'>isReadyTimeout</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Default timeout for test start (in milliseconds). ...</div><div class='long'><p>Default timeout for test start (in milliseconds). Default value is 15000. See <a href=\"#!/api/Siesta.Test-method-isReady\" rel=\"Siesta.Test-method-isReady\" class=\"docClass\">Siesta.Test.isReady</a> for details.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>10000</code></p></div></div></div><div id='cfg-jasmine' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-jasmine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-jasmine' class='name expandable'>jasmine</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This option can only be specified in the test files descriptor. ...</div><div class='long'><p>This option can only be specified in the <a href=\"#!/api/Siesta.Harness-method-start\" rel=\"Siesta.Harness-method-start\" class=\"docClass\">test files descriptor</a>.\nIf its set to <code>true</code>, the <code>url</code> property of the descriptor should point to the Jasmine spec runner html page.\nSiesta then will automatically import the results from the Jasmine suite.</p>\n\n<p>Additionally, one need to add a special reporter to the spec runner page, which is available\nas <code>SIESTA_FOLDER/bin/jasmine-siesta-reporter.js</code>.</p>\n\n<p>Currently Siesta can import the results from Jasmine 2.0 and above.</p>\n\n<p>Typical setup will look like (see also <code>SIESTA_FOLDER/examples/1.unit-tests/jasmine_suite/SpecRunner.html</code> example):</p>\n\n<pre><code>&lt;head&gt;\n    ...\n    &lt;script src=\"lib/jasmine-2.2.0/jasmine.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"lib/jasmine-2.2.0/jasmine-html.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"lib/jasmine-2.2.0/boot.js\"&gt;&lt;/script&gt;\n\n    &lt;!-- Add Siesta reporter to your Jamsine spec runner (adjust the path) --&gt;\n    &lt;script src=\"../../../bin/jasmine-siesta-reporter.js\"&gt;&lt;/script&gt;\n    ....\n&lt;/head&gt;\n</code></pre>\n\n<p>&nbsp;</p>\n\n<pre><code>harness.start(\n    // regular Siesta test\n    '010_regular_test.t.js',\n\n    // a Jasmine test suite \n    {\n        jasmine         : true,\n        expectedGlobals : [ 'Player', 'Song' ],\n        // url should point to the specs runner html page in this case \n        url             : 'jasmine_suite/SpecRunner.html'\n    }\n)\n</code></pre>\n</div></div></div><div id='cfg-keepNLastResults' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-keepNLastResults' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-keepNLastResults' class='name expandable'>keepNLastResults</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates the number of the test results which still should be kept, for user examination. ...</div><div class='long'><p>Indicates the number of the test results which still should be kept, for user examination.\nResults are cleared when their total number exceed this value, based on FIFO order.</p>\n<p>Defaults to: <code>2</code></p></div></div></div><div id='cfg-listeners' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-listeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-listeners' class='name expandable'>listeners</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>The object which keys corresponds to event names and values - to event handlers. ...</div><div class='long'><p>The object which keys corresponds to event names and values - to event handlers. If provided, the special key \"scope\" will be treated as the\nscope for all event handlers, otherwise the harness itself will be used as scope.</p>\n\n<p>Note, that the events from individual <a href=\"#!/api/Siesta.Test\" rel=\"Siesta.Test\" class=\"docClass\">test cases</a> instances will bubble up to the harness - you can listen to all of them in one place:</p>\n\n<pre><code>harness.configure({\n    title     : 'Awesome Test Suite',\n\n    preload : [\n        'http://cdn.sencha.io/ext-4.1.0-gpl/resources/css/ext-all.css',\n        'http://cdn.sencha.io/ext-4.1.0-gpl/ext-all-debug.js',\n\n        'preload.js'\n    ],\n\n    listeners : {\n        testsuitestart      : function (event, harness) {\n            log('Test suite is starting: ' + harness.title)\n        },\n        testsuiteend        : function (event, harness) {\n            log('Test suite is finishing: ' + harness.title)\n        },\n        teststart           : function (event, test) {\n            log('Test case is starting: ' + test.url)\n        },\n        testupdate          : function (event, test, result) {\n            log('Test case [' + test.url + '] has been updated: ' + result.description + (result.annotation ? ', ' + result.annotation : ''))\n        },\n        testfailedwithexception : function (event, test) {\n            log('Test case [' + test.url + '] has failed with exception: ' + test.failedException)\n        },\n        testfinalize        : function (event, test) {\n            log('Test case [' + test.url + '] has completed')\n        }\n    }\n})\n</code></pre>\n</div></div></div><div id='cfg-maintainViewportSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-maintainViewportSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-maintainViewportSize' class='name expandable'>maintainViewportSize</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Enabling this option will cause Siesta to honor the viewportWidth and viewportHeight configuration options. ...</div><div class='long'><p>Enabling this option will cause Siesta to honor the <a href=\"#!/api/Siesta.Harness.Browser-cfg-viewportWidth\" rel=\"Siesta.Harness.Browser-cfg-viewportWidth\" class=\"docClass\">viewportWidth</a> and <a href=\"#!/api/Siesta.Harness.Browser-cfg-viewportHeight\" rel=\"Siesta.Harness.Browser-cfg-viewportHeight\" class=\"docClass\">viewportHeight</a> configuration options.</p>\n\n<p>This option can also be specified in the test file descriptor.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-maxThreads' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-maxThreads' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-maxThreads' class='name expandable'>maxThreads</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>The maximum number of tests running at the same time. ...</div><div class='long'><p>The maximum number of tests running at the same time. Only applicable for <code>parallel</code> run-core.</p>\n<p>Defaults to: <code>4</code></p></div></div></div><div id='cfg-mouseMovePrecision' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-mouseMovePrecision' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-mouseMovePrecision' class='name expandable'>mouseMovePrecision</a> : Integer<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines how precisely to follow the path between two points when simulating a drag or mouse move. ...</div><div class='long'><p>Defines how precisely to follow the path between two points when simulating a drag or mouse move.\nValue 1 indicates that \"mouseover/mouseout\" events are simulated for every point along the path (which is\noften not required at all).\nValue 2 indicates every other point will be used. In general, low value = slow dragging, high value = fast dragging.</p>\n\n<p>Setting this option to some big number (like 100000) will cause Siesta to only simulate events for the\ninitial and final points in the path, which provides significant performance boost. However, if you need\nto verify some behaviour, triggered by mouse events from the element somewhere in the middle of the path\nyou may need to use lower value for this option.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>1</code></p></div></div></div><div id='cfg-needDone' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-needDone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-needDone' class='name expandable'>needDone</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, the tests will must indicate that that they have reached the correct\nexit point with t.done() call,...</div><div class='long'><p>When set to <code>true</code>, the tests will must indicate that that they have reached the correct\nexit point with <code>t.done()</code> call, after which, adding any assertions is not allowed.\nUsing this option will ensure that test did not exit prematurely with some exception silently caught.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-needUI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-needUI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-needUI' class='name expandable'>needUI</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This option determines whether the Siesta UI should be rendered. ...</div><div class='long'><p>This option determines whether the Siesta UI should be rendered. By default, it is enabled\nwhen running suite in the browser and disabled in automation launcher. You can explictly set it to <code>true</code>, to show the UI\neven in automation mode:</p>\n\n<pre><code>harness.configure({\n    needUI      : true\n})\n</code></pre>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-overrideSetTimeout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-overrideSetTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-overrideSetTimeout' class='name expandable'>overrideSetTimeout</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, the tests will override the native \"setTimeout\" from the context of each test\nfor asynchronous code...</div><div class='long'><p>When set to <code>true</code>, the tests will override the native \"setTimeout\" from the context of each test\nfor asynchronous code tracking. If setting it to <code>false</code>, you will need to use <code>beginAsync/endAsync</code> calls to indicate that test is still running.</p>\n\n<p>Note, that this option may not work reliably, when used for several sub tests launched simultaneously (for example\nfor several sibling <a href=\"#!/api/Siesta.Test-method-todo\" rel=\"Siesta.Test-method-todo\" class=\"docClass\">Siesta.Test.todo</a> sections.</p>\n\n<p>This option can be also specified in the test file descriptor. Defaults to <code>false</code>.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-pageUrl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-pageUrl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-pageUrl' class='name expandable'>pageUrl</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The url of the HTML page which will be the target for the test(s) (the URL must be on the same domain the harness HTM...</div><div class='long'><p>The url of the HTML page which will be the target for the test(s) (the URL must be on the same domain the harness HTML page). This option is used for application level testing, Siesta will visit this URL and then launch\nthe test. See <code>/examples/021-extjs-drag-drop/index.js</code> for an example.</p>\n\n<p>Note that with this option, the test descriptor will stop inheriting the <a href=\"#!/api/Siesta.Harness.Browser-cfg-preload\" rel=\"Siesta.Harness.Browser-cfg-preload\" class=\"docClass\">preload</a> option from parent descriptors/harness\n(to make sure you don't preload your dependencies twice). This is usually an expected behavior, and you still can specify the <code>preload</code> option\ndirectly on such descriptor if needed.</p>\n\n<p>This option can be also specified in the test file descriptor. This option has a deprecated synonym - \"hostPageUrl\"</p>\n\n<p>For example, to define that a test should be executed on a page generated by some php script:</p>\n\n<pre><code>harness.start(\n    {\n        pageUrl         : '../my_php_script?page=home',     // url of the html page for test\n        url             : '020_home_page_drag_n_drop.t.js'  // url of the js file, containing actual test code\n    },\n    ...\n)\n</code></pre>\n</div></div></div><div id='cfg-pauseBetweenTests' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-pauseBetweenTests' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-pauseBetweenTests' class='name expandable'>pauseBetweenTests</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Default timeout between tests (in milliseconds). ...</div><div class='long'><p>Default timeout between tests (in milliseconds). Increase this settings for big test suites, to give browser time for memory cleanup.</p>\n<p>Defaults to: <code>10</code></p></div></div></div><div id='cfg-preload' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-preload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-preload' class='name expandable'>preload</a> : Array<span class=\"signature\"></span></div><div class='description'><div class='short'>The array which contains the preload descriptors describing which files/code should be preloaded into the scope of ea...</div><div class='long'><p>The array which contains the <em>preload descriptors</em> describing which files/code should be preloaded into the scope of each test.</p>\n\n<p>Preload descriptor can be:</p>\n\n<ul>\n<li>a string, containing an url to load (cross-domain urls are ok, if url ends with \".css\" it will be loaded as CSS)</li>\n<li>an object <code>{ type : 'css/js', url : '...' }</code> allowing to specify the CSS files with different extension</li>\n<li>an object <code>{ type : 'css/js', content : '...' }</code> allowing to specify the inline content for script / style. The content should only be the tag content - not the tag itself, it'll be created by Siesta.</li>\n<li>an object <code>{ text : '...' }</code> which is a shortcut for <code>{ type : 'js', content : '...' }</code></li>\n</ul>\n\n\n<p>For example:</p>\n\n<pre><code>harness.configure({\n    title           : 'Ext Scheduler Test Suite',\n\n    preload         : [\n        'http://cdn.sencha.io/ext-4.0.2a/resources/css/ext-all.css',\n        'http://cdn.sencha.io/ext-4.0.2a/ext-all-debug.js',\n        {\n            text    : 'MySpecialGlobalFunc = function () { if (typeof console != \"undefined\") ... }'\n        }\n    ],\n    ...\n})\n</code></pre>\n\n<p>This option can be also specified in the test file descriptor. <strong>Note</strong>, that if test descriptor has non-empty\n<a href=\"#!/api/Siesta.Harness.Browser-cfg-pageUrl\" rel=\"Siesta.Harness.Browser-cfg-pageUrl\" class=\"docClass\">pageUrl</a> option, then <em>it will not inherit</em> the <code>preload</code> option\nfrom parent descriptors or harness, <strong>unless</strong> it has the <code>preload</code> config set to string <code>inherit</code>.\nIf both <code>pageUrl</code> and <code>preload</code> are set on the harness level, <code>preload</code> value still will be inherited. For example:</p>\n\n<pre><code>harness.configure({\n    pageUrl     : 'general-page.html',\n    preload         : [ 'my-file.js' ],\n    ...\n})\n\nharness.start(\n    // this test will inherit both `pageUrl` and `preload`\n    'test1.js',\n    {\n        // no preloads inherited\n        pageUrl     : 'host-page.html',\n        url         : 'test2.js'\n    }, \n    {\n        // inherit `preload` value from the upper level - [ 'my-file.js' ]\n        pageUrl     : 'host-page.html',\n        preload     : 'inherit',\n        url         : 'test3.js'\n    }, \n    {\n        group       : 'Some group',\n        pageUrl     : 'host-page2.html',\n        preload     : 'inherit',\n\n        items           : [\n            {\n                // inherit `pageUrl` value from the group\n                // inherit `preload` value from the upper level - [ 'my-file.js' ]\n                url     : 'test3.js'\n            }\n        ]\n    }\n)\n</code></pre>\n\n<p>When using the code coverage feature, one need to explicitly mark the JavaScript files that needs to be instrumented with the \"instrument : true\".\nSee Siesta.Harness.Browser.enableCodeCoverage for details.</p>\n\n<pre><code>harness.configure({\n    preload         : [\n        {\n            type        : 'js',\n            url         : 'some_file.js',\n            instrument  : true\n        }\n    ],\n    ...\n})\n</code></pre>\n</div></div></div><div id='cfg-recorderConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-recorderConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-recorderConfig' class='name expandable'>recorderConfig</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'><p>A custom config object used to configure the <a href=\"#!/api/Siesta.Recorder.Recorder\" rel=\"Siesta.Recorder.Recorder\" class=\"docClass\">Siesta.Recorder.Recorder</a> instance</p>\n</div><div class='long'><p>A custom config object used to configure the <a href=\"#!/api/Siesta.Recorder.Recorder\" rel=\"Siesta.Recorder.Recorder\" class=\"docClass\">Siesta.Recorder.Recorder</a> instance</p>\n</div></div></div><div id='cfg-rerunHotKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-rerunHotKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-rerunHotKey' class='name expandable'>rerunHotKey</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The key to press together with CTRL to rerun the latest test ...</div><div class='long'><p>The key to press together with CTRL to rerun the latest test</p>\n<p>Defaults to: <code>'E'</code></p></div></div></div><div id='cfg-restartOnBlur' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-restartOnBlur' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-restartOnBlur' class='name expandable'>restartOnBlur</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Experimental. ...</div><div class='long'><p><strong>Experimental</strong>. When this option is enabled, Siesta will emit a warning when focus moves outside of the test window.\nWhen running in automation mode Siesta will also restart the test.</p>\n\n<p>This option can also be specified in the test file descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-runCore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-runCore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-runCore' class='name expandable'>runCore</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Either parallel or sequential. ...</div><div class='long'><p>Either <code>parallel</code> or <code>sequential</code>. Indicates how the individual tests should be run - several at once or one-by-one.</p>\n\n<p>Default value is \"parallel\", except for IE 6, 7, 8 where it's set to <code>sequential</code>.</p>\n\n<p>Set this option to <code>sequential</code> for tests, that uses some exclusive resources (like for example focus of the\ntext fields).</p>\n\n<pre><code>harness.start(\n    'some_test.t.js',\n    {\n        url         : 'test_that_relies_on_focus.t.js',\n        runCore     : 'sequential'\n    }\n)\n</code></pre>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>'parallel'</code></p><p>Overrides: <a href=\"#!/api/Siesta.Harness-cfg-runCore\" rel=\"Siesta.Harness-cfg-runCore\" class=\"docClass\">Siesta.Harness.runCore</a></p></div></div></div><div id='cfg-runInPopup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-runInPopup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-runInPopup' class='name expandable'>runInPopup</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Experimental. ...</div><div class='long'><p>Experimental. When set to <code>true</code> the tests will be executed in the popup, instead of iframe.\nYou will need to enable popups the host you are testing from.</p>\n\n<p>Popups provides almost exactly the same environment as standalone page - notably the <code>window.top</code> property\nreference the popup itself, making it easier to test hash-based navigation.</p>\n\n<p>Note, that mouse cursor visualization does not work for tests in popups.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-sandbox' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-sandbox' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-sandbox' class='name expandable'>sandbox</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This option controls whether the individual tests should be run in isolation from each other. ...</div><div class='long'><p>This option controls whether the individual tests should be run in isolation from each other. By default it is enabled,\nand every test file will be run inside of the newly created iframe, so that it can not interfere with\nany other test. Such setup gives you predictable starting state for every test, removes the need for any kind of\ncleanup at the end of the test and is more robust in general.</p>\n\n<p>However, the setup of every iframe take some time (for preloading). If you are sure that your tests\ndo not modify any global state (like global variable that can affect the other test) you may want to run\nall of them in the same context, saving the setup time. In this case, you may want to disable this option.</p>\n\n<p>Siesta collects all tests with this option disabled and split them into chunks. Every chunk will have exactly\nthe same values for the configs that influence the initial setup of the page: <a href=\"#!/api/Siesta.Harness.Browser-cfg-preload\" rel=\"Siesta.Harness.Browser-cfg-preload\" class=\"docClass\">preload</a>, <a href=\"#!/api/Siesta.Harness.Browser-cfg-alsoPreload\" rel=\"Siesta.Harness.Browser-cfg-alsoPreload\" class=\"docClass\">alsoPreload</a>,\n<a href=\"#!/api/Siesta.Harness.Browser-cfg-pageUrl\" rel=\"Siesta.Harness.Browser-cfg-pageUrl\" class=\"docClass\">pageUrl</a>, Siesta.Test.ExtJS.requires and some others. The tests inside of every\nchunk will be run sequentially, in the same sandbox.</p>\n\n<p><strong>Important</strong>: The 1st test in every chunk will be run normally. Starting from the 2nd one, tests\nwill skip the <a href=\"#!/api/Siesta.Test-method-isReady\" rel=\"Siesta.Test-method-isReady\" class=\"docClass\">Siesta.Test.isReady</a> check and <a href=\"#!/api/Siesta.Test-method-setup\" rel=\"Siesta.Test-method-setup\" class=\"docClass\">Siesta.Test.setup</a> methods. This is because all the\nsetup is supposed to be already done by the 1st test. This behavior may change (or made configurable) in the future.</p>\n\n<p>This option can be specified in the test file descriptor.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Harness.Browser-cfg-sandboxBoundaryByGroup\" rel=\"Siesta.Harness.Browser-cfg-sandboxBoundaryByGroup\" class=\"docClass\">sandboxBoundaryByGroup</a>, <a href=\"#!/api/Siesta.Harness.Browser-cfg-sandboxCleanup\" rel=\"Siesta.Harness.Browser-cfg-sandboxCleanup\" class=\"docClass\">sandboxCleanup</a></p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-sandboxBoundaryByGroup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-sandboxBoundaryByGroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-sandboxBoundaryByGroup' class='name expandable'>sandboxBoundaryByGroup</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Only applicable for tests with the sandbox option disabled. ...</div><div class='long'><p>Only applicable for tests with the <a href=\"#!/api/Siesta.Harness.Browser-cfg-sandbox\" rel=\"Siesta.Harness.Browser-cfg-sandbox\" class=\"docClass\">sandbox</a> option <em>disabled</em>.</p>\n\n<p>when this option is enabled, the tests to be run in the same context will be guaranteed to reside in the same group.\nIf a new test group starts (even with the same \"preload\" config) - a fresh context for that group will be created\nby Siesta.</p>\n\n<p>For example, in the following setup, both \"Group 1\" and \"Group 2\" have sandboxing disabled and the\nsame \"preload\" config. If <code>sandboxBoundaryByGroup</code> will be disabled all 4 individual tests will be run\nin the same context. If <code>sandboxBoundaryByGroup</code> will be enabled, separate fresh context will be created\nfor the tests from each group.</p>\n\n<pre><code>harness.configure({\n    preload     : [ ... ]\n});\n\nharness.start(\n    {\n        group       : 'Group 1',\n        sandbox     : false,\n        items       : [\n            '010-basics/010_sanity.t.js',\n            '010-basics/020_jshint.t.js'\n        ]\n    },\n    {\n        group       : 'Group 2',\n        sandbox     : false,\n        items       : [\n            '020-basics/010_sanity.t.js',\n            '020-basics/030_bdd.t.js'\n        ]\n    },\n    ...\n)\n</code></pre>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-sandboxCleanup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-sandboxCleanup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-sandboxCleanup' class='name expandable'>sandboxCleanup</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Only applicable for tests with the sandbox option disabled. ...</div><div class='long'><p>Only applicable for tests with the <a href=\"#!/api/Siesta.Harness.Browser-cfg-sandbox\" rel=\"Siesta.Harness.Browser-cfg-sandbox\" class=\"docClass\">sandbox</a> option <em>disabled</em>. When enabled, test that runs\nin shared sandbox (the sandbox in which another test just has been run) will perform a cleanup.</p>\n\n<p>By default it will remove any \"unexpected\" globals (see <a href=\"#!/api/Siesta.Harness.Browser-cfg-expectedGlobals\" rel=\"Siesta.Harness.Browser-cfg-expectedGlobals\" class=\"docClass\">expectedGlobals</a>) and clear the DOM.</p>\n\n<p>If you will disable this option, every new test in the \"groups\" will start from the state previous test\nhas finished the execution. This will allow you split one big test scenario into several files</p>\n\n<p>This option can be specified in the test file descriptor.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-simulateEventsWith' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-simulateEventsWith' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-simulateEventsWith' class='name expandable'>simulateEventsWith</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This option is IE9-strict mode (and probably above) specific. ...</div><div class='long'><p>This option is IE9-strict mode (and probably above) specific. It specifies how Siesta should simulate events.\nThe options are 'dispatchEvent' (W3C standard) or 'fireEvent' (MS interface) - both are available in IE9 strict mode\nand each activates different set of event listeners. See this blog post for detailed explanations:\n<a href=\"http://www.digitalenginesoftware.com/blog/archives/76-DOM-Event-Model-Compatibility-or-Why-fireEvent-Doesnt-Trigger-addEventListener.html\">http://www.digitalenginesoftware.com/blog/archives/76-DOM-Event-Model-Compatibility-or-Why-fireEvent-Doesnt-Trigger-addEventListener.html</a></p>\n\n<p>Valid values are \"dispatchEvent\" and \"fireEvent\".</p>\n\n<p>The framework specific adapters (like <a href=\"#!/api/Siesta.Test.ExtJS\" rel=\"Siesta.Test.ExtJS\" class=\"docClass\">Siesta.Test.ExtJS</a> and like <a href=\"#!/api/Siesta.Test.jQuery\" rel=\"Siesta.Test.jQuery\" class=\"docClass\">Siesta.Test.jQuery</a>) choose the most appropriate value\nautomatically (unless explicitly configured).</p>\n<p>Defaults to: <code>{is: 'rw', init: 'dispatchEvent'}</code></p></div></div></div><div id='cfg-speedRun' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-speedRun' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-speedRun' class='name expandable'>speedRun</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, harness will reduce the quality or completely remove the visual effects for events simulation,\nimpr...</div><div class='long'><p>When set to <code>true</code>, harness will reduce the quality or completely remove the visual effects for events simulation,\nimproving the speed of test. Default value is <code>true</code>.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-subTestTimeout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-subTestTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-subTestTimeout' class='name expandable'>subTestTimeout</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Default timeout for sub tests. ...</div><div class='long'><p>Default timeout for sub tests. Default value is twice bigger than <a href=\"#!/api/Siesta.Harness-cfg-defaultTimeout\" rel=\"Siesta.Harness-cfg-defaultTimeout\" class=\"docClass\">defaultTimeout</a>.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n</div></div></div><div id='cfg-testClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-testClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-testClass' class='name expandable'>testClass</a> : Class<span class=\"signature\"></span></div><div class='description'><div class='short'>The test class which will be used for creating test instances, defaults to Siesta.Test.Browser. ...</div><div class='long'><p>The test class which will be used for creating test instances, defaults to <a href=\"#!/api/Siesta.Test.Browser\" rel=\"Siesta.Test.Browser\" class=\"docClass\">Siesta.Test.Browser</a>.\nYou can subclass <a href=\"#!/api/Siesta.Test.Browser\" rel=\"Siesta.Test.Browser\" class=\"docClass\">Siesta.Test.Browser</a> and provide a new class.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Overrides: <a href=\"#!/api/Siesta.Harness-cfg-testClass\" rel=\"Siesta.Harness-cfg-testClass\" class=\"docClass\">Siesta.Harness.testClass</a></p></div></div></div><div id='cfg-title' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-title' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-title' class='name expandable'>title</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The title of the test suite. ...</div><div class='long'><p>The title of the test suite. Can contain HTML. When provided in the test file descriptor - will change the name of test in the harness UI.</p>\n</div></div></div><div id='cfg-transparentEx' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-transparentEx' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-transparentEx' class='name expandable'>transparentEx</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true harness will not try to catch any exception, thrown from the test code. ...</div><div class='long'><p>When set to <code>true</code> harness will not try to catch any exception, thrown from the test code.\nThis is very useful for debugging - you can for example use the \"break on error\" option in Firebug.\nBut, using this option may naturally lead to unhandled exceptions, which may leave the harness in incosistent state -\nrefresh the browser page in such case.</p>\n\n<p>Defaults to <code>false</code> - harness will do its best to detect any exception thrown from the test code.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-useStrictMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-useStrictMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-useStrictMode' class='name expandable'>useStrictMode</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to false the test scopes will be created w/o strict mode DOCTYPE. ...</div><div class='long'><p>When set to <code>false</code> the test scopes will be created w/o strict mode <code>DOCTYPE</code>. Default value is <code>true</code>.\nThis option is not applicable for tests with <code>pageUrl</code> option.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-viewDOM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-viewDOM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-viewDOM' class='name expandable'>viewDOM</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>When set to true, harness will expand the panel with the &lt;iframe&gt; of the test file, so you can examine the cont...</div><div class='long'><p>When set to <code>true</code>, harness will expand the panel with the <code>&lt;iframe&gt;</code> of the test file, so you can examine the content of DOM.\nDefault value is <code>false</code></p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-viewportHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-viewportHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-viewportHeight' class='name expandable'>viewportHeight</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>The height of the test iframe, default value is 768 ...</div><div class='long'><p>The height of the test iframe, default value is 768</p>\n<p>Defaults to: <code>768</code></p></div></div></div><div id='cfg-viewportWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-cfg-viewportWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-cfg-viewportWidth' class='name expandable'>viewportWidth</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>The width of the test iframe, default value is 1024 ...</div><div class='long'><p>The width of the test iframe, default value is 1024</p>\n<p>Defaults to: <code>1024</code></p></div></div></div><div id='cfg-waitForTimeout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-cfg-waitForTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-cfg-waitForTimeout' class='name expandable'>waitForTimeout</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Default timeout for waitFor (in milliseconds). ...</div><div class='long'><p>Default timeout for <code>waitFor</code> (in milliseconds). Default value is 10000.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n<p>Defaults to: <code>10000</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-configure' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-method-configure' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-method-configure' class='name expandable'>configure</a>( <span class='pre'>config</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method configures the harness instance. ...</div><div class='long'><p>This method configures the harness instance. It just copies the passed configuration option into harness instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'><ul>\n<li>configuration options (values of attributes for this class)</li>\n</ul>\n\n</div></li></ul></div></div></div><div id='method-isStandardPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser'>Siesta.Harness.Browser</span><br/><a href='source/Browser3.html#Siesta-Harness-Browser-method-isStandardPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser-method-isStandardPackage' class='name expandable'>isStandardPackage</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This methos returns true if this harness is being run on the\nStandard package of Siesta, false otherwise. ...</div><div class='long'><p>This methos returns <code>true</code> if this harness is being run on the\n<a href=\"http://www.bryntum.com/products/siesta/\">Standard package</a> of Siesta, <code>false</code> otherwise.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-start' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-method-start' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-method-start' class='name expandable'>start</a>( <span class='pre'>descriptor1, descriptor2, descriptorN</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will launch a test suite. ...</div><div class='long'><p>This method will launch a test suite. It accepts a variable number of <em>test file descriptors</em> or an array of such. A test file descritor is one of the following:</p>\n\n<ul>\n<li>a string, containing a test file url. The url should be unique among all tests. If you need to re-use the same test\nfile, you can add an arbitrary query string to it: <code>my_test.t.js?copy=1</code></li>\n<li>an object containing the <code>url</code> property <code>{ url : '...', option1 : 'value1', option2 : 'value2' }</code>. The <code>url</code> property should point to the test file.\nOther properties can contain values of some configuration options of the harness (marked accordingly). In this case, they will <strong>override</strong> the corresponding values,\nprovided to harness or parent descriptor.</li>\n<li>an object <code>{ group : 'groupName', items : [], expanded : true, option1 : 'value1' }</code> specifying the folder of test files. The <code>expanded</code> property\nsets the initial state of the folder - \"collapsed/expanded\". The <code>items</code> property can contain an array of test file descriptors.\nOther properties will override the applicable harness options <strong>for all child descriptors</strong>.</li>\n</ul>\n\n\n<p>If test descriptor is <code>null</code> or other \"falsy\" value it is ignored.</p>\n\n<p>Groups (folder) may contain nested groups. Number of nesting levels is not limited.</p>\n\n<p>For example, one may easily have a special group of test files, having its own <code>preload</code> configuration (for example for testing on-demand loading). In the same\ntime some test in that group may have its own preload, overriding others.</p>\n\n<pre><code>harness.configure({\n    title           : 'Ext Scheduler Test Suite',\n    preload         : [\n        'http://cdn.sencha.io/ext-4.0.2a/resources/css/ext-all.css',\n        'http://cdn.sencha.io/ext-4.0.2a/ext-all-debug.js',\n        '../awesome-app-all-debug.js'\n    ],\n    ...\n})\n\nharness.start(\n    // regular file\n    'data/crud.t.js',\n    // a group with own \"preload\" config for its items\n    {\n        group       : 'On-demand loading',\n\n        preload     : [\n            'http://cdn.sencha.io/ext-4.0.2a/resources/css/ext-all.css',\n            'http://cdn.sencha.io/ext-4.0.2a/ext-all-debug.js',\n        ],\n        items       : [\n            'ondemand/sanity.t.js',\n            'ondemand/special-test.t.js',\n            // a test descriptor with its own \"preload\" config (have the most priority)\n            {\n                url         : 'ondemand/4-0-6-compat.t.js',\n                preload     : [\n                    'http://cdn.sencha.io/ext-4.0.6/resources/css/ext-all.css',\n                    'http://cdn.sencha.io/ext-4.0.6/ext-all-debug.js',\n                ]\n            },\n            // sub-group\n            {\n                group       : 'Sub-group',\n                items       : [\n                    ...\n                ]\n            }\n        ]\n    },\n    ...\n)\n</code></pre>\n\n<p>Additionally, you can provide a test descriptor in the test file itself, adding it as the 1st or 2nd argument for <code>StartTest</code> call:</p>\n\n<pre><code>StartTest({\n    autoCheckGlobals    : false,\n    alsoPreload         : [ 'some_additional_preload.js' ]\n}, function (t) {\n    ...\n}) \n</code></pre>\n\n<p>Values from this object takes the highest priority and will override any other configuration.</p>\n\n<p>Test descriptor may contain special property - <code>config</code> which will be applied to the test instance created. Be careful not to overwrite\nstandard properties and methods!</p>\n\n<pre><code>harness.start(\n    {\n        url         : 'ondemand/4-0-6-compat.t.js',\n        config      : {\n            myProperty1     : 'value1',\n            myProperty2     : 'value2'\n        }\n    },\n    ...\n)\n\nStartTest(function (t) {\n    if (t.myProperty1 == 'value1') {\n        // do this\n    }\n    ...\n})\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>descriptor1</span> : Array/Mixed<div class='sub-desc'><p>or an array of descriptors</p>\n</div></li><li><span class='pre'>descriptor2</span> : Mixed<div class='sub-desc'>\n</div></li><li><span class='pre'>descriptorN</span> : Mixed<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-startFromUrl' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-method-startFromUrl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-method-startFromUrl' class='name expandable'>startFromUrl</a>( <span class='pre'>url</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will read the content of the provided url then will try to parse it as JSON\nand pass to the regular start...</div><div class='long'><p>This method will read the content of the provided <code>url</code> then will try to parse it as JSON\nand pass to the regular <a href=\"#!/api/Siesta.Harness-method-start\" rel=\"Siesta.Harness-method-start\" class=\"docClass\">start</a> method. The file on the <code>url</code> should contain\na valid JSON array object with test descriptors.</p>\n\n<p>You can use this method in conjunction with the <code>bin/discover</code> utility, which can\nauto-discover the test files and generate a starter file for you. In such setup, it is convenient\nto specify the test configs in the test file itself (see <a href=\"#!/api/Siesta.Harness-method-start\" rel=\"Siesta.Harness-method-start\" class=\"docClass\">start</a> method for details).\nHowever, in such setup, you can not use conditional processing of the descriptors set, so\nyou decide what fits best to your needs.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-testsuiteend' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-event-testsuiteend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-event-testsuiteend' class='name expandable'>testsuiteend</a>( <span class='pre'>event, harness</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This event is fired when the test suite ends. ...</div><div class='long'><p>This event is fired when the test suite ends. Note, that when running the test suite in the browser, this event can be fired several times\n(for each group of tests you've launched).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>harness</span> : <a href=\"#!/api/Siesta.Harness\" rel=\"Siesta.Harness\" class=\"docClass\">Siesta.Harness</a><div class='sub-desc'><p>The harness that just has ended</p>\n</div></li></ul></div></div></div><div id='event-testsuitestart' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Siesta.Harness' rel='Siesta.Harness' class='defined-in docClass'>Siesta.Harness</a><br/><a href='source/Harness.html#Siesta-Harness-event-testsuitestart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness-event-testsuitestart' class='name expandable'>testsuitestart</a>( <span class='pre'>event, harness</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This event is fired when the test suite starts. ...</div><div class='long'><p>This event is fired when the test suite starts. Note, that when running the test suite in the browser, this event can be fired several times\n(for each group of tests you've launched).</p>\n\n<p>You can subscribe to it, using regular ExtJS syntax:</p>\n\n<pre><code> harness.on('testsuitestart', function (event, harness) {}, scope, { single : true })\n</code></pre>\n\n<p>See also the \"/examples/events\"</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : JooseX.Observable.Event<div class='sub-desc'><p>The event instance</p>\n</div></li><li><span class='pre'>harness</span> : <a href=\"#!/api/Siesta.Harness\" rel=\"Siesta.Harness\" class=\"docClass\">Siesta.Harness</a><div class='sub-desc'><p>The harness that just has started</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});