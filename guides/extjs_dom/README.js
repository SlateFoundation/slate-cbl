Ext.data.JsonP.extjs_dom({"guide":"<h1 id='extjs_dom-section-ext-js%3A-manipulating-the-dom'>Ext JS: Manipulating the DOM</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/extjs_dom-section-getting-an-ext.dom.element-reference'>Getting an Ext.dom.Element reference</a></li>\n<li><a href='#!/guide/extjs_dom-section-chaining-ext.dom.element-methods'>Chaining Ext.dom.Element methods</a></li>\n</ol>\n</div>\n\n<p>The <a href=\"http://docs.sencha.com/extjs/6.0/6.0.0-classic/#!/api/Ext.dom.Element\"><code>Ext.dom.Element</code></a> class wraps around DOM elements\nand provides high-level methods for manipulating them.</p>\n\n<h2 id='extjs_dom-section-getting-an-ext.dom.element-reference'>Getting an Ext.dom.Element reference</h2>\n\n<p>Ext JS provides two basic methods for getting an <code>Ext.dom.Element</code> instance attached to a DOM element:</p>\n\n<ul>\n<li><a href=\"http://docs.sencha.com/extjs/6.0/6.0.0-classic/#!/api/Ext-method-get\"><code>Ext.get(element)</code></a>: Accepts either a string matching the <code>id</code>\nattribute of an existing page element or a raw <code>HTMLElement</code> instance from the browser</li>\n<li><a href=\"http://docs.sencha.com/extjs/6.0/6.0.0-classic/#!/api/Ext-method-fly\"><code>Ext.fly(element)</code></a>: Similar to <code>Ext.get()</code>, but instead of\ncreating a new <code>Ext.dom.Element</code> instance it updates a globally shared instance called the <em>flyweight Element</em> and returns that. Be\nsure to <strong>never</strong> store a reference to the <code>Ext.dom.Element</code> instance returned by this method, as it is liable to be pointing at a\ndifferent DOM element next time you use it. Using <code>Ext.fly()</code> is optimal when you only need one-time access to an element, for\nexample: <code>Ext.fly('myelement').hide().addCls('is-myelement')</code></li>\n</ul>\n\n\n<p>Additionally, the following convenience methods are available for getting <code>Ext.dom.Element</code> wrappers for the foundational DOM\nelements of the page:</p>\n\n<ul>\n<li><a href=\"http://docs.sencha.com/extjs/6.0/6.0.0-classic/#!/api/Ext-method-getWin\"><code>Ext.getWin()</code></a>: Shortcut for <code>Ext.get(window)</code></li>\n<li><a href=\"http://docs.sencha.com/extjs/6.0/6.0.0-classic/#!/api/Ext-method-getDoc\"><code>Ext.getDoc()</code></a>: Shortcut for <code>Ext.get(window.document)</code></li>\n<li><a href=\"http://docs.sencha.com/extjs/6.0/6.0.0-classic/#!/api/Ext-method-getHead\"><code>Ext.getHead()</code></a>: Shortcut for <code>Ext.get(window.document.getElementsByTagName('head')[0])</code></li>\n<li><a href=\"http://docs.sencha.com/extjs/6.0/6.0.0-classic/#!/api/Ext-method-getBody\"><code>Ext.getBody()</code></a>: Shortcut for <code>Ext.get(window.document.body)</code></li>\n</ul>\n\n\n<h2 id='extjs_dom-section-chaining-ext.dom.element-methods'>Chaining Ext.dom.Element methods</h2>\n\n<p>Nearly all methods under <code>Ext.dom.Element</code> return a reference to the same <code>Ext.dom.Element</code>, allowing you to chain together calls:</p>\n\n<pre class='inline-example '><code>Ext.require('Ext.dom.Element', function() {\n    Ext.getBody().removeCls('is-loading').addCls('is-loaded').setStyle('background', 'pink');\n});\n</code></pre>\n","title":"Manipulating the DOM"});